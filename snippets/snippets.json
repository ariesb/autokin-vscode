{
	"GivenSecureDomain": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvds"
		],
		"body": [
			"Given that a secure endpoint is up at ${1:domain}"
		],
		"description": "Given that a secure endpoint is up at {domain}"
	},
	"GivenDomain": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvd",
		],
		"body": [
			"Given that a endpoint is up at ${1:domain} "
		],
		"description": "Given that a endpoint is up at {domain}"
	},
	"GivenSetHeader": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvsh"
		],
		"body": [
			"Given I set ${1:name} header to ${2:value}"
		],
		"description": "Given I set {name} header to {value}"
	},
	"GivenFromHeader": {
		"scope": "feature",
		"prefix": [ 
			"Given", 
			"gvfh" 
		],
		"body": [
			"Given I set ${1:name} header from ${2:stored value name}"
		],
		"description": "Given I set {name} header from {stored value name}"
	},
	"GivenHeaders": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvhs"
		],
		"body": [
			"Given I set headers to",
			"    | name | value |",
			"    | ${1:header name} | ${2:value} |"
		],
		"description": "Given I set headers to "
	},
	"GivenSetQueryParameter": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvqs"
		],
		"body": [
			"Given I set query parameters to",
			"    | name | value |",
			"    | ${1:query name} | ${2:value} |"
		],
		"description": "Given I set query parameters to"
	},
	"GivenSetParameteer": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvsq"
		],
		"body": [
			"Given I set query parameter ${1:name} to ${2:value}"
		],
		"description": "Given I set query parameter {name} to {value}"
	},
	"GivenSetFromQuery": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvfp"
		],
		"body": [
			"Given I set query parameter \"${1:name}\" from \"${2:stored value name}\""
		],
		"description": "Given I set query parameter {name} from {stored value name}"
	},
	"GivenJSONBody": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvjb"
		],
		"body": [
			"Given I set the JSON body to",
			"\"\"\"",
			"{",
			"${1:json}",
			"}",
			"\"\"\""
		],
		"description": "Given I set the JSON body to"
	},
	"GivenSetCookie": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvcp"
		],
		"body": [
			"Given I set the cookie to ${1:name}=${2:value}"
		],
		"description": "Given I set the cookie to {cookie value pair}"
	},
	"GivenCookieSet": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvsc"
		],
		"body": [
			"Given I set the cookie \"${1:name}\" to \"${2:value}\""
		],
		"description": "Given I set the cookie {name} to {value}"
	},
	"GivenSetFromCookie": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvfc"
		],
		"body": [
			"Given I set the cookie \"${1:name}\" from \"${2:stored value name}\""
		],
		"description": "Given I set the cookie {name} from {stored value name}"
	},
	"GivenBasicAuth": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvau"
		],
		"body": [
			"Given I have basic authentication credentials ${1:username} and ${2:password}"
		],
		"description": "Given I have basic authentication credentials {username} and {password}"
	},
	"GivenSetBearerToken": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvtk"
		],
		"body": [
			"Given I set the bearer token to ${1:token}"
		],
		"description": "Given I set the bearer token to {token}"
	},
	"GivenSetBearerFrom": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvtkf"
		],
		"body": [
			"Given I set the bearer token with \"${1:stored value name}\""
		],
		"description": "Given I set the bearer token with {stored value name}"
	},
	"WhenGet": {
		"scope": "feature",
		"prefix": [
			"When",
			"whget"
		],
		"body": [
			"When I GET ${1:uri}"
		],
		"description": "When I GET {uri}"
	},
	"WhenPost": {
		"scope": "feature",
		"prefix": [
			"When",
			"whpost"
		],
		"body": [
			"When I POST to ${1:uri}"
		],
		"description": "When I POST to {uri}"
	},
	"WhenPut": {
		"scope": "feature",
		"prefix": [
			"When",
			"whput"
		],
		"body": [
			"When I PUT to ${1:uri}"
		],
		"description": "When I PUT to {uri}"
	},
	"WhenDelete": {
		"scope": "feature",
		"prefix": [
			"When",
			"whdel"
		],
		"body": [
			"When I perform DELETE to ${1:uri}"
		],
		"description": "When I perform DELETE to {uri}"
	},
	"WhenPatch": {
		"scope": "feature",
		"prefix": [
			"When",
			"whpat"
		],
		"body": [
			"When I PATCH to ${1:uri}"
		],
		"description": "When I PATCH to {uri}"
	},
	"ThenStatusCode": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thc"
		],
		"body": [
			"Then response status code should be ${1:expected status code}"
		],
		"description": "Then response status code should be {expected status code}"
	},
	"ThenNotStatusCode": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thnc"
		],
		"body": [
			"Then response status code should not be ${1:expected status code}"
		],
		"description": "Then response status code should not be {expected status code}"
	},
	"ThenHeaderExists": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thhx"
		],
		"body": [
			"Then response header \"${1:name}\" should exist"
		],
		"description": "Then response header {name} should exist"
	},
	"ThenHeaderNotExist": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thhnx"
		],
		"body": [
			"Then response header \"${1:name}\" should not exist"
		],
		"description": "Then response header {name} should not exist"
	},
	"ThenHeaderExpectedValue": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thhv"
		],
		"body": [
			"Then response header \"${1:name}\" should be \"${1:expected value}\""
		],
		"description": "Then response header {name} should be {expected value}"
	},
	"ThenHeaderNotExpected": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thhnv"
		],
		"body": [
			"Then response header \"${1:name}\" should not be \"${1:expected value}\""
		],
		"description": "Then response header {name} should not be {expected value}"
	},
	"ThenBodyValidJson": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thjbv"
		],
		"body": [
			"Then response body should be valid json"
		],
		"description": "Then response body should be valid json"
	},
	"ThenBodyJsonComparison": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thjbc"
		],
		"body": [
			"Then response body should be json data of",
			"\"\"\"",
			"{",
			"${1:json}",
			"}",
			"\"\"\""
		],
		"description": "Then response body should be json data of"
	},
	"ThenExpectPathValue": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thpv"
		],
		"body": [
			"Then I expect that path \"${1:path}\" from body has value of \"${2:expected value}\""
		],
		"description": "Then I expect that path {path} from body has value of {expected value}"
	},
	"ThenBodyPath": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thbp"
		],
		"body": [
			"Then response body should have path \"${1:path}\""
		],
		"description": "Then response body should have path {path}"
	},
	"ThenLessResponseTime": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thlt"
		],
		"body": [
			"Then response time is not greater than ${1:response time}ms"
		],
		"description": "Then response time is not greater than {response time}ms"
	},
	"ThenGreaterResponseTime": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thgt"
		],
		"body": [
			"Then response time is greater than ${1:response time}ms"
		],
		"description": "Then response time is greater than {response time}ms"
	},
	"ThenKeepPathValue": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thkpv"
		],
		"body": [
			"Then I keep the value of body path \"${1:path}\" as \"${2:storage name}\""
		],
		"description": "Then I keep the value of body path {path} as {storage name}"
	},
	"ThenKeepHeaderValue": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thkhv"
		],
		"body": [
			"Then I keep the value of header \"${1:name}\" as \"${2:storage name}\""
		],
		"description": "Then I keep the value of header {name} as {storage name}"
	},
	"ThenExpectStoredValue": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thxsv"
		],
		"body": [
			"Then I expect that the stored value in \"${1:name}\" is \"${2:expected value}\""
		],
		"description": "Then I expect that the stored value in {storage name} is {expected value}"
	},
	"ThenExpectSchema": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thxsch"
		],
		"body": [
			"Then I expect response data schema complies to \"${1:schema path}\""
		],
		"description": "Then I expect response data schema complies to {schema path}"
	},
	"ThenExpectPathWithNull": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thxpn"
		],
		"body": [
			"Then I expect that path \"${1:path}\" from body has null value"
		],
		"description": "Then I expect that path {path} from body has null value"
	},
	"ThenExpectStoreNameWithNull": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thxsnn"
		],
		"body": [
			"Then I expect that the stored value in \"${1:storage name}\" is null"
		],
		"description": "Then I expect that the stored value in {storage name} is null"
	},
	"ThenExpectResponseNotHavePath": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thxbnhp"
		],
		"body": [
			"Then response body should not have path \"${1:path}\""
		],
		"description": "Then response body should not have path {path}"
	},
	"Given that an application is hosted at {url}": {
		"scope": "feature",
		"prefix": [
			"gvwah",
			"Given"
		],
		"body": [
			"Given that an application is hosted at \"${1:url}\""
		],
		"description": "Given that an application is hosted at {url}"
	},
	"Given that I set the browser window size to {width} and {height}": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvwsz"
		],
		"body": [
			"Given that I set the browser window size to ${1:width} and ${2:height}"
		],
		"description": "Given that I set the browser window size to {width} and {height}"
	},
	"Given that I mock API with": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvwmck"
		],
		"body": [
			"Given that I mock API with",
			"\t\"\"\"",
			"\t{",
			"\t\t\"url\": \"${1:https://}\",",
			"\t\t\"method\": \"${2|GET,POST,PUT,DELETE,PATCH|}\",",
			"\t\t\"status\": ${3:200},",
			"\t\t\"body\": {},",
			"\t\t\"image\": {",
			"\t\t\t\"type\": \"jpg\",",
			"\t\t\t\"width\": 100,",
			"\t\t\t\"height\": 100,",
			"\t\t\t\"background\": \"#ddd\"",
			"\t\t}",
			"\t}",
			"\t\"\"\""
		],
		"description": "Given that I mock API with"
	},
	"Given that I mock URL with": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvwmcku"
		],
		"body": [
			"Given that I mock URL with",
			"\t\"\"\"",
			"\t{",
			"\t\t\"url\": \"${1:https://}\",",
			"\t\t\"method\": \"${2|GET,POST,PUT,DELETE,PATCH|}\",",
			"\t\t\"status\": ${3:200},",
			"\t\t\"body\": {},",
			"\t\t\"image\": {",
			"\t\t\t\"type\": \"jpg\",",
			"\t\t\t\"width\": 100,",
			"\t\t\t\"height\": 100,",
			"\t\t\t\"background\": \"#ddd\"",
			"\t\t}",
			"\t}",
			"\t\"\"\""
		],
		"description": "Given that I mock URL with"
	},
	"Given that I reload the page": {
		"scope": "feature",
		"prefix": [
			"Given",
			"gvwrld"
		],
		"body": [
			"Given that I reload the page"
		],
		"description": "Given that I reload the page"
	},
	"When I navigate to {path}": {
		"scope": "feature",
		"prefix": [
			"When",
			"whwnv"
		],
		"body": [
			"When I navigate to \"${1:path}\""
		],
		"description": "When I navigate to {path}"
	},
	"When I set {value} to input element with {selector} selector": {
		"scope": "feature",
		"prefix": [
			"When",
			"whwset"
		],
		"body": [
			"When I set \"${1:value}\" to input element with \"${2:selector}\" selector"
		],
		"description": "When I set {value} to input element with {selector} selector"
	},
	"When I click on {selector}": {
		"scope": "feature",
		"prefix": [
			"When",
			"whwclk"
		],
		"body": [
			"When I click on \"${1:selector}\""
		],
		"description": "When I click on {selector}"
	},
	"When I hover on {selector}": {
		"scope": "feature",
		"prefix": [
			"When",
			"whwhvr"
		],
		"body": [
			"When I hover on \"${1:selector}\""
		],
		"description": "When I hover on {selector}"
	},
	"Then I take a screenshot as {path}": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thwtke"
		],
		"body": [
			"Then I take a screenshot as \"${1:path}\""
		],
		"description": "Then I take a screenshot as {path}"
	},
	"Then I expect that selector {selector} has the text of {value}": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thwexpt"
		],
		"body": [
			"Then I expect that selector \"${2:selector}\" has the text of \"${2:value}\""
		],
		"description": "Then I expect that selector {selector} has the text of {value}"
	},
	"Then I expect that selector {selector} has the value of {value}": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thwexpv"
		],
		"body": [
			"Then I expect that selector \"${2:selector}\" has the value of \"${2:value}\""
		],
		"description": "Then I expect that selector {selector} has the value of {value}"
	},
	"Then I wait until network is idle": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thwidle"
		],
		"body": [
			"Then I wait until network is idle"
		],
		"description": "Then I wait until network is idle"
	},
	"Then I wait for {seconds} seconds": {
		"scope": "feature",
		"prefix": [
			"Then",
			"thwwait"
		],
		"body": [
			"Then I wait for ${1:seconds} seconds"
		],
		"description": "Then I wait for {seconds} seconds"
	}
}